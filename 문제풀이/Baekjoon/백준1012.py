# -*- coding: utf-8 -*-
"""백준1012

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1auwHpPF6tjjzJWgW0lJmSLmMpZ1ISsB3
"""

# 유기농 배추
import numpy as np

way = np.array([[0,-1],[1,0],[0,1],[-1,0]])

T = int(input())
for _ in range(T):
    cnt = 0
    location = []
    visited = np.empty((0,2), int)
    M, N, K = map(int, input().split())
    for _ in range(K):
        xy = list(map(int, input().split()))
        location.append(xy)
    location = np.array(location)

    for i in location:
        been = np.empty((0,2), int)
        if i in visited:
            continue
        while 1:
            visited = np.append(visited, np.array([i]), axis=0)
            been = np.append(been, np.array([i]), axis=0)
            result = True
            for k in way:
                if i+k in location:
                    if i+k in visited:  # 방문했으면 스킵
                        continue
                    i = i+k     # 이동!
                    result = False
                    break
            if result:
                break
        cnt += 1
    print(cnt)

import sys

def dfs(graph, start_node): # 깊이우선탐색
    visit = []
    stack = []
    stack.append(start_node)

    while stack:
        node = stack.pop()
        if node not in visit:
            visit.append(node)
            stack.extend(graph[node])
            
    return visit

T = int(input())
for _ in range(T):
    graph = {}
    save = []
    M, N, K = map(int, input().split())
    for _ in range(K):
        xy = tuple(map(int, sys.stdin.readline().split()))
        save.append(xy)
    for i in save:
        graph[i] = []
        if (i[0]+1,i[1]) in save:
            graph[i].append((i[0]+1,i[1]))
        if (i[0],i[1]+1) in save:
            graph[i].append((i[0],i[1]+1))
        if (i[0]-1,i[1]) in save:
            graph[i].append((i[0]-1,i[1]))
        if (i[0],i[1]-1) in save:
            graph[i].append((i[0],i[1]-1))

    cnt = 0
    while graph:
        result = dfs(graph, save[0])
        for i in result:
            save.remove(i)
            del graph[i]
        cnt += 1
    print(cnt)