# -*- coding: utf-8 -*-
"""백준1991

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kfnh-CeCsOtpvrxB073He0jHJ7jPflVj
"""

# 트리 순회
class Node:
    def __init__(self, root, left, right):
        self.root = root
        self.left = left
        self.right = right

def preorder(input):
    print(input.root, end ='')
    if input.left != '.':
        preorder(tree[input.left])
    if input.right != '.':
        preorder(tree[input.right])
    
def inorder(input):
    if input.left != '.':
        inorder(tree[input.left])
    print(input.root, end ='')
    if input.right != '.':
        inorder(tree[input.right])

def postorder(input):
    if input.left != '.':
        postorder(tree[input.left])
    if input.right != '.':
        postorder(tree[input.right])
    print(input.root, end ='')

tree = {}
N = int(input())
for i in range(N):
    root, left, right = map(str, input().split())
    tree[root] = (Node(root, left, right))

preorder(tree['A'])
print()
inorder(tree['A'])
print()
postorder(tree['A'])